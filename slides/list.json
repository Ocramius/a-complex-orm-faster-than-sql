[
    "introduction/hello.html",
    "introduction/i-am-marco.html",
    "introduction/ocramius.html",
    {
        "background": null,
        "path":       "introduction/i-am-ocramius.html"
    },
    "introduction/i-work-for-roave.html",
    "introduction/i-work-on-zend-framework-2.html",
    "introduction/i-work-on-doctrine.html",

    "extremely-defensive-php/the-talk/extremely-defensive-php.html",
    "extremely-defensive-php/the-talk/what-is-this-talk-about.html",
    "extremely-defensive-php/the-talk/this-talk-is-about-extremism.html",
    {
        "background": "assets/img/feature-creep.png",
        "path":       null
    },
    "extremely-defensive-php/the-talk/know-your-limit.html",

    "extremely-defensive-php/what-is-defensive-coding/do-you-know-defensive-driving.html",
    "extremely-defensive-php/what-is-defensive-coding/you-are-dumb.html",
    "extremely-defensive-php/what-is-defensive-coding/no-i-do-not-mean-you.html",
    "extremely-defensive-php/what-is-defensive-coding/i-am-dumb.html",
    "extremely-defensive-php/what-is-defensive-coding/we-are-dumb.html",
    "extremely-defensive-php/what-is-defensive-coding/everyone-is-dumb.html",
    {
        "background": null,
        "path":       "extremely-defensive-php/what-is-defensive-coding/everyone-gets-a-dumb.html"
    },
    "extremely-defensive-php/what-is-defensive-coding/defensive-coding-is-similar-to-defensive-driving.html",
    "extremely-defensive-php/what-is-defensive-coding/be-scared-by-everyones-code.html",
    "extremely-defensive-php/what-is-defensive-coding/be-scared-by-your-code.html",

    "extremely-defensive-php/poka-yoke/where-do-these-concepts-come-from.html",
    "extremely-defensive-php/poka-yoke/clean-code.html",
    "extremely-defensive-php/poka-yoke/effective-java.html",
    "extremely-defensive-php/poka-yoke/poka-yoke.html",
    "extremely-defensive-php/poka-yoke/poka-yoke-rj45.html",
    "extremely-defensive-php/poka-yoke/poka-yoke-usb-not.html",

    "extremely-defensive-php/code-is-not-reusable/lets-make-one-thing-clear.html",
    "extremely-defensive-php/code-is-not-reusable/code-is-reusable.html",
    "extremely-defensive-php/code-is-not-reusable/code-is-not-reusable.html",
    "extremely-defensive-php/code-is-not-reusable/code-is-crap.html",
    "extremely-defensive-php/code-is-not-reusable/abstractions-are-reusable.html",
    "extremely-defensive-php/code-is-not-reusable/code-for-your-use-case-not-for-your-reuse-case.html",
    "extremely-defensive-php/code-is-not-reusable/90-percent-of-everything-is-crap.html",
    "extremely-defensive-php/code-is-not-reusable/dont-write-crap.html",

    "extremely-defensive-php/good-practices/good-practices.html",

    "extremely-defensive-php/good-practices/solid/assuming-solid-code.html",

    "extremely-defensive-php/good-practices/encapsulation/all-state-protected-from-external-access.html",
    "extremely-defensive-php/good-practices/encapsulation/getter-datetime-example.html",
    "extremely-defensive-php/good-practices/encapsulation/getter-datetime-example-bug.html",
    "extremely-defensive-php/good-practices/encapsulation/getter-datetime-example-fixed.html",
    "extremely-defensive-php/good-practices/encapsulation/constructor-datetime-example.html",
    "extremely-defensive-php/good-practices/encapsulation/external-access-includes-subclasses.html",

    "extremely-defensive-php/good-practices/private-properties/make-state-private.html",
    "extremely-defensive-php/good-practices/private-properties/all-properties-private-by-default.html",

    "extremely-defensive-php/good-practices/single-method-classes/avoid-unnecessary-public-methods.html",
    "extremely-defensive-php/good-practices/single-method-classes/unnecessary-not-very-striclty-required.html",
    "extremely-defensive-php/good-practices/single-method-classes/a-public-method-is-like-a-child.html",
    "extremely-defensive-php/good-practices/single-method-classes/good-object-oriented-programming-is-pretty-much-functional-programming.html",

    "extremely-defensive-php/good-practices/constructor-as-only-mutator/constructor-is-your-only-injection-point.html",
    "extremely-defensive-php/good-practices/constructor-as-only-mutator/no-un-initialized-properties.html",
    "extremely-defensive-php/good-practices/constructor-as-only-mutator/optional-dependencies.html",
    "extremely-defensive-php/good-practices/constructor-as-only-mutator/logger-optional-example.html",
    "extremely-defensive-php/good-practices/constructor-as-only-mutator/there-are-no-optional-dependencies.html",
    "extremely-defensive-php/good-practices/constructor-as-only-mutator/logger-required-example.html",

    "extremely-defensive-php/good-practices/no-setters/no-setters.html",
    "extremely-defensive-php/good-practices/no-setters/setters-do-not-mean-anything.html",

    "extremely-defensive-php/good-practices/immutable-state/use-immutable-wherever-possible.html",
    "extremely-defensive-php/good-practices/immutable-state/what-about-performance.html",

    "extremely-defensive-php/good-practices/logic-switch-parameters/avoid-logic-switch-parameters.html",
    "extremely-defensive-php/good-practices/logic-switch-parameters/logic-switch-mailer-example.html",
    "extremely-defensive-php/good-practices/logic-switch-parameters/logic-switch-mailer-fixed-example.html",

    "extremely-defensive-php/good-practices/parameter-types/no-mixed-parameter-types.html",
    "extremely-defensive-php/good-practices/parameter-types/mixed-parameter-types-mess-example.html",
    "extremely-defensive-php/good-practices/parameter-types/mixed-parameter-types-fixed-example.html",
    "extremely-defensive-php/good-practices/parameter-types/value-objects-ftw.html",
    "extremely-defensive-php/good-practices/parameter-types/value-objects-ensure-consistency.html",
    "extremely-defensive-php/good-practices/parameter-types/value-objects-simplify-data-validation.html",

    "extremely-defensive-php/good-practices/return-types/no-mixed-return-types.html",
    "extremely-defensive-php/good-practices/return-types/value-objects-ftw.html",

    "extremely-defensive-php/good-practices/no-fluent-interfaces/avoid-fluent-interfaces.html",
    "extremely-defensive-php/good-practices/no-fluent-interfaces/fluent-interface-usages-example.html",
    "extremely-defensive-php/good-practices/no-fluent-interfaces/poka-yoke.html",
    "extremely-defensive-php/good-practices/no-fluent-interfaces/fluent-interface-usages-fixed-example.html",
    "extremely-defensive-php/good-practices/final-classes/blog-post-reference.html",

    "extremely-defensive-php/good-practices/final-classes/final-by-default.html",
    "extremely-defensive-php/good-practices/final-classes/an-extension-is-a-different-use-case.html",
    "extremely-defensive-php/good-practices/final-classes/does-extending-the-interface-add-meaning.html",
    "extremely-defensive-php/good-practices/final-classes/blog-post-reference.html",

    "extremely-defensive-php/good-practices/deep-cloning/ensure-deep-cloning.html",
    "extremely-defensive-php/good-practices/deep-cloning/deep-cloning-example.html",
    "extremely-defensive-php/good-practices/deep-cloning/cloning-requires-encapsulated-state-understanding.html",
    "extremely-defensive-php/good-practices/deep-cloning/disable-cloning.html",
    "extremely-defensive-php/good-practices/deep-cloning/disable-cloning-example.html",

    "extremely-defensive-php/good-practices/serializable/same-for-serialization.html",
    "extremely-defensive-php/good-practices/serializable/is-it-really-serializable.html",
    "extremely-defensive-php/good-practices/serializable/disable-serialization.html",
    "extremely-defensive-php/good-practices/serializable/serialize-only-if-serializable.html",

    "extremely-defensive-php/good-practices/testing/testing.html",
    "extremely-defensive-php/good-practices/testing/test-all-scenarios.html",
    "extremely-defensive-php/good-practices/testing/test-all-scenarios-example.html",
    "extremely-defensive-php/good-practices/testing/test-all-scenarios-example-cases.html",

    "outro/thanks.html"
]
